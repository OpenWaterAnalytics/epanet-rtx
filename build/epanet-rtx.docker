FROM debian:bookworm-slim

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libsqlite3-dev cmake unixodbc-dev libcpprest-dev \
    libboost-dev libboost-iostreams-dev gcc g++ make git zlib1g-dev \
    openssl curl nlohmann-json3-dev libcurl4-openssl-dev

ENV VIRTUAL_ENV=/opt/venv
RUN apt-get install -y python3-venv \
    && python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN pip3 install conan \
    && conan profile detect \
    && conan profile show -pr default

WORKDIR /opt/src

## build/install EPANET
RUN git clone --depth=1 https://github.com/cameron-devine/EPANET.git \
    && cd EPANET \
    && sed -i '844s/,EN_Project/,void*/g' ./src/epanet.c \
    && sed -i '520s/EN_Project,/void*,/g' ./include/epanet2_2.h \
    && sed -i '636s/EN_Project/void*/g' ./src/types.h \
    && mkdir build && cd build \
    && cmake .. \
    && cmake --build . --config Release \
    && cp lib/* /usr/local/lib/ \
    && cp ../include/*.h /usr/local/include/ \
    && cp ../src/*.h /usr/local/include/

# RUN git clone --depth=1 https://github.com/OpenWaterAnalytics/epanet-rtx.git \
RUN git clone --depth=1 https://github.com/0tkl/epanet-rtx.git -b overhaul --single-branch \
    && cd epanet-rtx/deps \
    && conan create local_export/sqlite_modern_cpp_conan.py \
    && conan install . --build=missing -of conan_build/

RUN cp -r EPANET epanet-rtx \
    && cd epanet-rtx/build/cmake \
    && cmake -B . \
    -DCMAKE_TOOLCHAIN_FILE=../../deps/conan_build/conan_toolchain.cmake \
    -DCMAKE_BUILD_TYPE=Release \
    && cmake --build . --config Release \
    && make install

RUN git clone https://github.com/srinivasrk/epanet-rtx-link.git rtx_link \
    && cd rtx_link \
    && cp ./build/templates/odbcinst.ini.template /etc/odbcinst.ini \
    && cp -r ./frontend /usr/app \
    && mkdir -p /usr/app/srv/linux \
    && cp /usr/local/bin/link-server /usr/app/srv/linux/link-server

RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y --no-install-recommends nodejs tdsodbc

WORKDIR /usr/app

RUN npm install --no-audit \
    && NODE_OPTIONS=--openssl-legacy-provider npm run build

EXPOSE 3000
VOLUME /root/rtx_link
CMD [ "npm", "start" ]
